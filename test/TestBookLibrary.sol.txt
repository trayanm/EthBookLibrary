// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

import "./../contracts/BookLibrary.sol";
import "truffle/build/Assert.sol";

//import "truffle/Assert.sol";

contract TestBookLibrary {
    // function testVotes() public {
    //     Voter voter = new Voter();

    //     uint256[] memory votes = voter.getVotes();
    //     Assert.equal(votes, 2, "Unexpecetd votes");
    // }

    function testVoteWithNumeric() public {
        Voter voter = new Voter();
        voter.addOption("water");
        voter.addOption("juise");
        voter.startVoting();

        voter.vote(0);

        uint[] memory votes = voter.getVotes();
        uint[] memory expected = new uint[](2);

        expected[0] = 1;
        expected[1] = 0;

        Assert.equal(votes, expected, "First options hould be voter for");
    }
}
